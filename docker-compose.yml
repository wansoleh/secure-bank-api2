services:
  db:
    image: postgres:latest
    container_name: postgres_container
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d secure_bank"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  migration:
    image: postgres:latest
    container_name: migration_container
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./migration.sql:/docker-entrypoint-initdb.d/migration.sql
    entrypoint: ["sh", "-c", "sleep 5 && PGPASSWORD=$DB_PASSWORD psql -h db -U $DB_USER -d $DB_NAME -f /docker-entrypoint-initdb.d/migration.sql"]

  seeder:
    image: postgres:latest
    container_name: seeder_container
    depends_on:
      migration:
        condition: service_completed_successfully
    env_file:
      - .env
    volumes:
      - ./seeder.sql:/docker-entrypoint-initdb.d/seeder.sql
    entrypoint: ["sh", "-c", "sleep 5 && PGPASSWORD=$DB_PASSWORD psql -h db -U $DB_USER -d $DB_NAME -f /docker-entrypoint-initdb.d/seeder.sql"]

  api:
    build: .
    container_name: secure_bank_api
    restart: always
    env_file:
      - .env
    ports:
      - "${API_PORT}:${API_PORT}"
    depends_on:
      seeder:
        condition: service_completed_successfully

volumes:
  postgres_data:
